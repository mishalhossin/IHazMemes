name: Go CI

on: [push, pull_request]

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ["1.23"]
    steps:
      - name: Set up Go ${{ matrix.go-version }}
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}

      - name: Check out code
        uses: actions/checkout@v3

      - name: Build cache
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Format code
        run: go fmt ./...

      - name: Update dependencies
        run: |
          go get -u
          go mod tidy -v

      - name: Build for Linux
        run: go build -o ./IHazMemes

      - name: Build for Windows
        run: GOOS=windows GOARCH=amd64 CGO_ENABLED=0 go build -o ./IHazMemes.exe

      - name: Run tests
        run: go test -v -race ./...

      - name: Tag a new release (manual step)
        if: github.event_name == 'workflow_dispatch'
        run: |
          if [ -z "${{ github.event.inputs.tag }}" ]; then
            echo "TAG is not set"; exit 1;
          fi
          git tag -a "${{ github.event.inputs.tag }}" -m "${{ github.event.inputs.tag }}"
          git push origin "${{ github.event.inputs.tag }}"
